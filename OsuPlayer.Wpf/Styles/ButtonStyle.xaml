<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Milky.OsuPlayer"
                    xmlns:wpfApi="clr-namespace:Milky.WpfApi;assembly=WpfApi">
    <!-- Image button style -->
    <Style TargetType="{x:Type Button}" x:Key="ImageButtonStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
  
    <!-- Collection button style -->
    <Style x:Key="CollectionButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#EEEEEE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" ClipToBounds="True">
                        <!-- Inner Rectangle with rounded corners. -->
                        <Rectangle x:Name="innerRectangle" HorizontalAlignment="Stretch"
                                       VerticalAlignment="Stretch" Fill="{TemplateBinding Background}" Stroke="#BBBBBB"
                                       Opacity="1"  />
                        <!-- Present Text of the button. -->
                        <DockPanel Name="myContentPresenterDockPanel">
                            <ContentPresenter x:Name="myContentPresenter" Content="{TemplateBinding Content}"
                                                  VerticalAlignment="Center" HorizontalAlignment="Center"
                                                  TextBlock.Foreground="Black" TextBlock.FontSize="12px" />
                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Set properties when mouse pointer is over the button. -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <!-- Sets the glass opacity to 1, therefore, the glass "appears" when user mouses over it. -->
                            <Setter Property="Rectangle.Fill" Value="#F8F8F8"  TargetName="innerRectangle" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Collection2 button style -->
    <Style x:Key="Collection2ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#EEEEF8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" ClipToBounds="True">
                        <!-- Inner Rectangle with rounded corners. -->
                        <Rectangle x:Name="innerRectangle" HorizontalAlignment="Stretch"
                                       VerticalAlignment="Stretch" Fill="{TemplateBinding Background}" Stroke="#80BBBBBB"
                                       StrokeThickness="1" Opacity="0"  />
                        <!-- Present Text of the button. -->
                        <DockPanel Name="myContentPresenterDockPanel">
                            <ContentPresenter x:Name="myContentPresenter" Content="{TemplateBinding Content}"
                                                  VerticalAlignment="Center" HorizontalAlignment="Center"
                                                  TextBlock.Foreground="Black" TextBlock.FontSize="12px" />
                        </DockPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Set properties when mouse pointer is over the button. -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <!-- Sets the glass opacity to 1, therefore, the glass "appears" when user mouses over it. -->
                            <Setter Property="Rectangle.Opacity" Value="0.75"  TargetName="innerRectangle" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Texture button style -->
    <Style x:Key="TextureButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Margin" Value="8" />
    </Style>
    <!-- Small texture button style -->
    <Style x:Key="SmallTextureButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Margin" Value="8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Canvas Name="SB" ClipToBounds="True"
                            Width="{TemplateBinding Width}" Height="{TemplateBinding Height}"
                            Background="{TemplateBinding Background}">
                        <Canvas.Effect>
                            <DropShadowEffect BlurRadius="3" ShadowDepth="1" Color="Black" Opacity="0.1"/>
                        </Canvas.Effect>
                    </Canvas>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="SB" Property="Opacity" Value="0.7"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="SB" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>